from direct.distributed import DistributedObject/AI/UD
from otp.distributed import Account/AI/UD
from otp.ai import TimeManager/AI
from otp.distributed import DistributedTestObject/AI

typedef uint8 bool;

typedef uint32 DoId;

typedef DoId DoIdList[];

struct AvatarPendingDel {
  uint32 Avatar;
  uint32 date;
};

dclass Account {
  string DcObjectType db;
  uint32 ACCOUNT_AV_SET[] required db;
  uint32 ESTATE_ID db;
  AvatarPendingDel ACCOUNT_AV_SET_DEL[] db;
  string CREATED db;
  string LAST_LOGIN db;
  string ACCOUNT_ID db;
  uint16 ACCESS_LEVEL db;
  uint32 MONEY db;
};

struct BarrierData {
  uint16 context;
  string name;
  DoIdList avIds;
};

dclass DistributedObject {
  setBarrierData(BarrierData []) broadcast ram;
  setBarrierReady(uint16 barrierContext) airecv clsend;
  execCommand(string command, DoId magicWordMgr,
              DoId avatar, uint32 zoneId);
  broadcastMessage() broadcast;
};

dclass DistributedTestObject : DistributedObject {
  uint32 AutoInterest[];
  setParentingRules(string, string) broadcast ram;
  setRequiredField(uint32) required broadcast ram;
  setB(uint32) broadcast;
  setBA(uint32) broadcast airecv;
  setBO(uint32) broadcast ownsend;
  setBR(uint32) broadcast ram;
  setBRA(uint32) broadcast ram airecv;
  setBRO(uint32) broadcast ram ownsend;
  setBROA(uint32) broadcast ram ownsend airecv;
};

struct OSInfo {
  string name;
  int16 platform;
  int16 major;
  int16 minor;
};

struct CPUSpeed {
  int32/1000 maxSpeed;
  int32/1000 currentSpeed;
};

dclass TimeManager : DistributedObject {
  requestServerTime(uint8 context) airecv clsend;
  serverTime(uint8 context, int32 timestap, uint32 timeOfDay);
  setDisconnectReason(uint8) airecv clsend;
  setExceptionInfo(string(0-1024)) airecv clsend;
  setSignature(string(0-1024) signature, char prcHash[16],
               char pycHash[16]) airecv clsend;
  setFrameRate(uint16/10 fps, uint16/1000 deviation, uint16 numAvatars,
               string(0-256) locationCode, uint32/10 timeInLocation,
               uint32/10 timeInGame, string(0-256) gameOptionsCode,
               uint16 vendorId, uint16 deviceId, uint32/10 processMemory,
               uint32/10 pageFileUsage, uint32/10 physicalMemory,
               uint32 pageFaultCount, OSInfo, CPUSpeed, uint16 cpuCores,
               uint16 logicalCPUs, string(0-256) apiName) airecv clsend;
  setCpuInfo(string(0-1024) infoStr, string cacheStatus) airecv clsend;
  checkForGarbageLeaks(bool) airecv clsend;
  setNumAIGarbageLeaks(uint32);
  setClientGarbageLeak(uint32, string(0-1024)) airecv clsend;
  checkAvOnDistrict(uint32 context, DoId avatar) clsend airecv;
  checkAvOnDistrictResult(uint32 context, DoId av, bool isOnDistrict);
};
